<%- include("../../views/partials/admin/header") %>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
  @media (min-width: 768px) {
    .col-custom-5 {
      width: 20%;
      flex: 0 0 auto;
    }
  }
</style>

<div class="container mt-4">
  <div class="mb-3">
    <h4>Products</h4>
  </div>

  <!-- Search Form -->
  <form class="mb-4" method="GET" action="/admin/products">
    <div class="input-group">
      <input type="text" class="form-control" name="search" placeholder="Search product..."
        value="<%= typeof search !== 'undefined' ? search : '' %>">
      <button class="btn btn-outline-secondary" type="submit">Search</button>
    </div>
  </form>

  <!-- Product Table -->
  <div class="table-responsive">
    <table class="table table-bordered align-middle text-center">
      <thead class="table-light">
        <tr>
          <th>Image</th>
          <th>Name</th>
          <th>Price (â‚¹)</th>
          <th>Category</th>
          <th>Stock</th>
          <th>Discount (%)</th>
          <th>Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% products.forEach(product => { %>
          <tr>
            <td><img src="<%= product.productImage[0]%> " alt="Product" style="height: 60px; object-fit: cover;"></td>
            <td><%= product.productName %></td>
            <td><%= product.price %></td>
            <td><%= product.category.categoryName %></td>
            <td><%= product.stock %></td>
            <td><%= product.discount %></td>
            <td>
                <span class="badge <%= product.isBlocked ? 'bg-danger' :'bg-success' %>">
                  <%= product.isBlocked ? 'Blocked': 'Available' %>
                </span>
            </td>
            <td class="d-flex justify-content-center align-items-center" style="height: 100%;">
                <div class="d-flex flex-column align-items-center gap-1">
                    <button class="btn btn-success btn-sm w-fixed" style="width: 80px;" data-product="<%= encodeURIComponent(JSON.stringify(product)) %>" onclick='openEditModalFromButton(this)'>Edit</button>

                  <button class="btn btn-danger btn-sm w-fixed" style="width: 80px;" onclick="confirmDelete('<%= product._id %>')">Delete</button>
                  <form id="toggleForm-<%= product._id %>" action="/admin/product-isBlocked/<%= product._id %>" method="POST" onsubmit="handleToggleSubmit(event)">
                    <button type="submit" class="btn btn-sm <%= product.isBlocked ? 'btn-info' :'btn-warning' %>" style="width: 80px;">
                      <%= product.isBlocked ? 'Unblock' : 'Block' %>
                    </button>
                  </form>
                </div>
            </td>              
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <!-- Pagination -->
  <div class="d-flex justify-content-center mt-4">
    <nav>
      <ul class="pagination">
        <% for (let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= currentPage == i ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
          </li>
        <% } %>
      </ul>
    </nav>
  </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="productForm" method="POST" enctype="multipart/form-data">
        <input type="hidden" name="productId" id="productId">
        <div class="modal-header">
          <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <div class="modal-body">
          <div class="mb-3">
            <label class="form-label">Name</label>
            <input type="text" class="form-control" id="productName" name="productName" required>
          </div>

          <div class="mb-3">
            <label class="form-label">Price</label>
            <input type="number" class="form-control" id="price" name="price" required>
          </div>

          <div class="mb-3">
            <label class="form-label">Stock</label>
            <input type="text" class="form-control" id="stock" name="stock" required>
          </div>

          <div class="mb-3">
            <label class="form-label">Discount (%)</label>
            <input type="number" class="form-control" id="discount" name="discount" required>
          </div>

        </div>

        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
  const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal'));

  function openEditModalFromButton(button){
    const product = JSON.parse(decodeURIComponent(button.dataset.product));
    openEditModal(product);
  }

  function openEditModal(product) {
    document.getElementById('editProductModalLabel').innerText = "Edit Product";
    document.getElementById('productForm').action = `/admin/product-edit/${product._id}`;
    document.getElementById('productName').value = product.productName;
    document.getElementById('price').value = product.price;
    document.getElementById('stock').value = product.stock;
    document.getElementById('discount').value = product.discount;
    document.getElementById('productId').value = product._id;

    editProductModal.show();
  }

  document.getElementById('productForm').addEventListener('submit', function (e) {
    e.preventDefault();
    const formData = new FormData(this);
    const url = this.action;

    fetch(url, {
    method: 'POST',
    body: formData
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        editProductModal.hide();
        Swal.fire({
          icon: 'success',
          title: data.message || 'Product updated successfully!',
          showConfirmButton: false,
          timer: 1500
        }).then(() => location.reload());
      } else {
        Swal.fire({
          icon: 'warning',
          title: 'Warning',
          text: data.message || 'Something went wrong',
        });
      }
    })
    .catch(() => {
      Swal.fire("Error", "Something went wrong", "error");
    });
  });

  function handleToggleSubmit(event) {
    event.preventDefault();
    const form = event.target;
    fetch(form.action, {
      method: 'POST'
    }).then(res => res.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: data.success,
            showConfirmButton: false,
            timer: 1500
          }).then(() => location.reload());
        }
      })
      .catch(() => {
        Swal.fire("Error", "Unable to update status", "error");
      });
  }

  function confirmDelete(productId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "This will delete the product!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/admin/product-delete/${productId}`, {
          method: 'POST'
        }).then(res => res.json())
          .then(data => {
            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: data.success,
                showConfirmButton: false,
                timer: 1500
              }).then(() => location.reload());
            }
          }).catch(() => {
            Swal.fire("Error", "Unable to delete the product", "error");
          });
      }
    });
  }
</script>
